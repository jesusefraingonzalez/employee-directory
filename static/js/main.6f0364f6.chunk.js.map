{"version":3,"sources":["components/UserRow.js","components/Searchbar.js","components/Table.js","utils/API.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["UserRow","Component","state","name","dob","email","phone","cell","picture","this","setState","props","employee","src","thumbnail","alt","firstName","lastName","Table","className","employees","map","API","getRandomUsers","numUsers","url","seed","axios","get","Container","sortedEmployees","sortCriteria","sortOrder","isSorted","filterQuery","handleInputChange","event","target","value","handleSearch","filterEmployees","query","toLowerCase","filter","includes","sortEmployees","list","sort","a","b","localeCompare","resetSort","then","data","results","first","last","catch","err","console","error","onChange","type","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f0364f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass UserRow extends Component {\n    state = {\n        name: '',\n        dob: '',\n        email: '',\n        phone: '',\n        cell: '',\n        picture: '',\n    }\n\n    componentDidMount() {\n        this.setState(this.props.employee);\n    }\n\n    render() {\n        return (\n            <tr>\n                <td><img src={this.state.thumbnail} alt='user thumbnail' /></td>\n                <td>{this.state.firstName}</td>\n                <td>{this.state.lastName}</td>\n                <td>{this.state.phone}</td>\n                <td>{this.state.cell}</td>\n                <td>{this.state.email}</td>\n            </tr>\n        )\n    }\n\n}\n\nexport default UserRow;","import React, { Component } from 'react';\n\nclass Searchbar extends Component {\n\n    render() {\n        return (\n            <div>\n                <input type='text' />\n                <button>Search</button>\n            </div>\n        );\n    }\n}\n\nexport default Searchbar;","import React, { Component } from 'react';\nimport UserRow from './UserRow';\n\nclass Table extends Component {\n    render() {\n\n        return (\n            <table className='table table-striped'>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Phone</th>\n                        <th>Cell</th>\n                        <th>Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.employees.map(employee => {\n                        return (\n                            <UserRow key={employee.email} employee={employee} />\n                        );\n                    })}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default Table;","import axios from 'axios';\n\nconst API = {\n    getRandomUsers: (numUsers) => {\n        let url;\n        let seed = 'seedmeplease';\n        \n        if (numUsers) url = `https://randomuser.me/api/?results=${numUsers}&seed=${seed}&inc=name,picture,email,phone,cell&noinfo`;\n        else url = `https://randomuser.me/api/?results=10&seed=${seed}&inc=name,picture,email,phone,cell&noinfo`;\n\n        return axios.get(url);\n    }\n}\n\nexport default API;","import React, { Component } from 'react';\nimport Searchbar from './Searchbar';\nimport Table from './Table';\nimport API from '../utils/API';\n\nclass Container extends Component {\n    state = {\n        employees: [],\n        sortedEmployees: [],\n        sortCriteria: 'first name',\n        sortOrder: 'ascending',\n        isSorted: true,\n        filterQuery: ''\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSearch = event => {\n        this.setState({ filterQuery: event.target.value });\n    }\n\n    // filtering the employees returns a new array\n    filterEmployees = () => {\n        let query = this.state.filterQuery.toLowerCase();\n        if(this.state.filterQuery === '') return this.state.sortedEmployees;\n        return this.state.sortedEmployees.filter(employee => employee.firstName.toLowerCase().includes(query) || employee.lastName.toLowerCase().includes(query));\n    }\n\n    sortEmployees = () => {\n        let list = this.state.sortedEmployees;\n\n        switch (this.state.sortCriteria) {\n            case 'first name':\n                if (this.state.sortOrder === 'ascending') list.sort((a, b) => a.firstName.toLowerCase().localeCompare(b.firstName) ? -1 : 1);\n                else list.sort((a, b) => a.firstName.toLowerCase() > b.firstName.toLowerCase() ? -1 : 1);\n            case 'last name':\n                if (this.state.sortOrder === 'ascending') list.sort((a, b) => a.lastName < b.lastName ? -1 : 1);\n                else list.sort((a, b) => a.lastName > b.lastName ? -1 : 1);\n            default:\n                break;\n        }\n        this.setState({sortedEmployees: list});\n    }\n\n    resetSort = () => {\n        this.setState({\n            sortedEmployees: this.state.employees\n        })\n    }\n    // make api call when the table mounts\n    componentDidMount() {\n        // api call to get random users\n        API.getRandomUsers(15)\n            .then(({ data }) => {\n                const employees = data.results.map(employee => {\n                    // returns an object with no nested objects\n                    return {\n                        firstName: employee.name.first,\n                        lastName: employee.name.last,\n                        phone: employee.phone,\n                        cell: employee.cell,\n                        email: employee.email,\n                        thumbnail: employee.picture.thumbnail\n                    }\n                });\n                // sets the employees state to the array with the cleaned data\n                this.setState({\n                    employees: [...employees],\n                    sortedEmployees: [...employees]\n                });\n\n            }).catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <input onChange={this.handleSearch} type='text' /> &nbsp;&nbsp;\n                <button\n                    className='btn btn-primary'\n                    onClick={this.sortEmployees}>\n                    Sort by Last Name</button> &nbsp;&nbsp;\n                <button\n                    className='btn btn-warning'\n                    onClick={this.resetSort}>\n                    Reset</button><br /><br />\n                <Table employees={this.filterEmployees()} />\n            </div>\n        )\n    }\n}\n\nexport default Container;","import './App.css';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"jumbotron-fluid jumbotron d-flex justify-content-center\">\n        <h1>Employee Directory</h1>\n      </div>\n      <Container />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}